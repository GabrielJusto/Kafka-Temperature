[2022-06-07 21:27:45,182] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-06-07 21:27:45,195] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 10 and epoch zk version is now 10 (kafka.controller.KafkaController)
[2022-06-07 21:27:45,196] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-06-07 21:27:45,198] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-06-07 21:27:45,200] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-06-07 21:27:45,201] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-06-07 21:27:45,213] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 13998) (kafka.controller.KafkaController)
[2022-06-07 21:27:45,232] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-06-07 21:27:45,266] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-06-07 21:27:45,269] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-06-07 21:27:45,269] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-06-07 21:27:45,269] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-06-07 21:27:45,270] INFO [Controller id=0] Current list of topics in the cluster: Set(CLIENT-CHARGED, STATION-UPDATE-REQUEST, STATION-REGISTER-RESPONSE, R-STATION-REGISTER-RESPONSE, __consumer_offsets, CLIENT-INFO, CLIENT-REGISTER, R-STATION-CHARGE-REQUEST, STATION-REGISTER, STATION-INFO, STATION-REGISTER-REQUEST) (kafka.controller.KafkaController)
[2022-06-07 21:27:45,270] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-06-07 21:27:45,275] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-06-07 21:27:45,275] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-06-07 21:27:45,275] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-06-07 21:27:45,275] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:45,276] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-06-07 21:27:45,282] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-06-07 21:27:45,285] INFO [RequestSendThread controllerId=0] Controller 0 connected to gabriel:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-06-07 21:27:45,285] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-06-07 21:27:45,343] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-06-07 21:27:45,344] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=CLIENT-INFO,Partition=0,Replica=0] -> OnlineReplica, [Topic=STATION-INFO,Partition=0,Replica=0] -> OnlineReplica, [Topic=CLIENT-REGISTER,Partition=0,Replica=0] -> OnlineReplica, [Topic=STATION-INFO,Partition=1,Replica=0] -> OnlineReplica, [Topic=CLIENT-INFO,Partition=1,Replica=0] -> OnlineReplica, [Topic=R-STATION-REGISTER-RESPONSE,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=STATION-REGISTER,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=STATION-REGISTER,Partition=0,Replica=0] -> OnlineReplica, [Topic=STATION-UPDATE-REQUEST,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=CLIENT-INFO,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=CLIENT-CHARGED,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=CLIENT-CHARGED,Partition=1,Replica=0] -> OnlineReplica, [Topic=STATION-REGISTER,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=STATION-REGISTER-REQUEST,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=CLIENT-REGISTER,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=STATION-INFO,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=R-STATION-CHARGE-REQUEST,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=STATION-REGISTER-RESPONSE,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=STATION-UPDATE-REQUEST,Partition=0,Replica=0] -> OnlineReplica, [Topic=STATION-REGISTER-RESPONSE,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=R-STATION-REGISTER-RESPONSE,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=CLIENT-CHARGED,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=STATION-REGISTER-RESPONSE,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=STATION-UPDATE-REQUEST,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=R-STATION-REGISTER-RESPONSE,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=CLIENT-REGISTER,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-06-07 21:27:45,344] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-06-07 21:27:45,346] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-06-07 21:27:45,347] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, STATION-REGISTER-1 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, STATION-INFO-2 -> OnlinePartition, CLIENT-CHARGED-0 -> OnlinePartition, CLIENT-REGISTER-2 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, STATION-UPDATE-REQUEST-0 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, R-STATION-REGISTER-RESPONSE-2 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, STATION-REGISTER-RESPONSE-2 -> OnlinePartition, STATION-REGISTER-0 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, CLIENT-REGISTER-1 -> OnlinePartition, STATION-INFO-1 -> OnlinePartition, STATION-UPDATE-REQUEST-2 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, R-STATION-CHARGE-REQUEST-0 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, CLIENT-CHARGED-2 -> OnlinePartition, CLIENT-INFO-1 -> OnlinePartition, STATION-REGISTER-2 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, R-STATION-REGISTER-RESPONSE-1 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, STATION-REGISTER-RESPONSE-1 -> OnlinePartition, STATION-REGISTER-REQUEST-0 -> OnlinePartition, STATION-UPDATE-REQUEST-1 -> OnlinePartition, STATION-INFO-0 -> OnlinePartition, CLIENT-REGISTER-0 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, CLIENT-CHARGED-1 -> OnlinePartition, CLIENT-INFO-0 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, R-STATION-REGISTER-RESPONSE-0 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, CLIENT-INFO-2 -> OnlinePartition, STATION-REGISTER-RESPONSE-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-06-07 21:27:45,348] INFO [Controller id=0] Ready to serve as the new controller with epoch 10 (kafka.controller.KafkaController)
[2022-06-07 21:27:45,355] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-06-07 21:27:45,356] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-06-07 21:27:45,358] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-06-07 21:27:45,358] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-06-07 21:27:45,359] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-06-07 21:27:45,364] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-06-07 21:27:46,050] DEBUG [Controller id=0] Delete topics listener fired for topics CLIENT-INFO to be deleted (kafka.controller.KafkaController)
[2022-06-07 21:27:46,051] INFO [Controller id=0] Starting topic deletion for topics CLIENT-INFO (kafka.controller.KafkaController)
[2022-06-07 21:27:46,052] INFO [Topic Deletion Manager 0] Handling deletion for topics CLIENT-INFO (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:46,053] INFO [Topic Deletion Manager 0] Deletion of topic CLIENT-INFO (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:46,121] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(CLIENT-INFO-1 -> NONE, CLIENT-INFO-0 -> NONE, CLIENT-INFO-2 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 21:27:46,122] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=CLIENT-INFO,Partition=1,Replica=0],[Topic=CLIENT-INFO,Partition=0,Replica=0],[Topic=CLIENT-INFO,Partition=2,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:46,123] INFO [Topic Deletion Manager 0] Handling deletion for topics CLIENT-INFO (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:46,155] INFO [Topic Deletion Manager 0] Deletion of topic CLIENT-INFO successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:46,157] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 21:27:46,158] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 21:27:47,260] DEBUG [Controller id=0] Delete topics listener fired for topics CLIENT-REGISTER to be deleted (kafka.controller.KafkaController)
[2022-06-07 21:27:47,260] INFO [Controller id=0] Starting topic deletion for topics CLIENT-REGISTER (kafka.controller.KafkaController)
[2022-06-07 21:27:47,261] INFO [Topic Deletion Manager 0] Handling deletion for topics CLIENT-REGISTER (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:47,261] INFO [Topic Deletion Manager 0] Deletion of topic CLIENT-REGISTER (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:47,292] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(CLIENT-REGISTER-2 -> NONE, CLIENT-REGISTER-1 -> NONE, CLIENT-REGISTER-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 21:27:47,292] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=CLIENT-REGISTER,Partition=2,Replica=0],[Topic=CLIENT-REGISTER,Partition=1,Replica=0],[Topic=CLIENT-REGISTER,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:47,293] INFO [Topic Deletion Manager 0] Handling deletion for topics CLIENT-REGISTER (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:47,318] INFO [Topic Deletion Manager 0] Deletion of topic CLIENT-REGISTER successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:47,319] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 21:27:47,320] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 21:27:48,470] DEBUG [Controller id=0] Delete topics listener fired for topics STATION-REGISTER to be deleted (kafka.controller.KafkaController)
[2022-06-07 21:27:48,470] INFO [Controller id=0] Starting topic deletion for topics STATION-REGISTER (kafka.controller.KafkaController)
[2022-06-07 21:27:48,470] INFO [Topic Deletion Manager 0] Handling deletion for topics STATION-REGISTER (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:48,470] INFO [Topic Deletion Manager 0] Deletion of topic STATION-REGISTER (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:48,499] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(STATION-REGISTER-1 -> NONE, STATION-REGISTER-0 -> NONE, STATION-REGISTER-2 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 21:27:48,499] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=STATION-REGISTER,Partition=1,Replica=0],[Topic=STATION-REGISTER,Partition=0,Replica=0],[Topic=STATION-REGISTER,Partition=2,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:48,500] INFO [Topic Deletion Manager 0] Handling deletion for topics STATION-REGISTER (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:48,524] INFO [Topic Deletion Manager 0] Deletion of topic STATION-REGISTER successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:48,525] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 21:27:48,526] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 21:27:49,654] DEBUG [Controller id=0] Delete topics listener fired for topics STATION-INFO to be deleted (kafka.controller.KafkaController)
[2022-06-07 21:27:49,654] INFO [Controller id=0] Starting topic deletion for topics STATION-INFO (kafka.controller.KafkaController)
[2022-06-07 21:27:49,655] INFO [Topic Deletion Manager 0] Handling deletion for topics STATION-INFO (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:49,655] INFO [Topic Deletion Manager 0] Deletion of topic STATION-INFO (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:49,692] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(STATION-INFO-2 -> NONE, STATION-INFO-1 -> NONE, STATION-INFO-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 21:27:49,692] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=STATION-INFO,Partition=2,Replica=0],[Topic=STATION-INFO,Partition=1,Replica=0],[Topic=STATION-INFO,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:49,692] INFO [Topic Deletion Manager 0] Handling deletion for topics STATION-INFO (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:49,716] INFO [Topic Deletion Manager 0] Deletion of topic STATION-INFO successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:49,717] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 21:27:49,717] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 21:27:50,365] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-06-07 21:27:50,365] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-06-07 21:27:50,368] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-06-07 21:27:50,369] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-06-07 21:27:50,887] DEBUG [Controller id=0] Delete topics listener fired for topics STATION-REGISTER-RESPONSE to be deleted (kafka.controller.KafkaController)
[2022-06-07 21:27:50,887] INFO [Controller id=0] Starting topic deletion for topics STATION-REGISTER-RESPONSE (kafka.controller.KafkaController)
[2022-06-07 21:27:50,887] INFO [Topic Deletion Manager 0] Handling deletion for topics STATION-REGISTER-RESPONSE (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:50,888] INFO [Topic Deletion Manager 0] Deletion of topic STATION-REGISTER-RESPONSE (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:50,919] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(STATION-REGISTER-RESPONSE-2 -> NONE, STATION-REGISTER-RESPONSE-1 -> NONE, STATION-REGISTER-RESPONSE-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 21:27:50,919] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=STATION-REGISTER-RESPONSE,Partition=2,Replica=0],[Topic=STATION-REGISTER-RESPONSE,Partition=1,Replica=0],[Topic=STATION-REGISTER-RESPONSE,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:50,919] INFO [Topic Deletion Manager 0] Handling deletion for topics STATION-REGISTER-RESPONSE (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:50,943] INFO [Topic Deletion Manager 0] Deletion of topic STATION-REGISTER-RESPONSE successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:50,944] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 21:27:50,945] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 21:27:52,100] DEBUG [Controller id=0] Delete topics listener fired for topics STATION-UPDATE-REQUEST to be deleted (kafka.controller.KafkaController)
[2022-06-07 21:27:52,100] INFO [Controller id=0] Starting topic deletion for topics STATION-UPDATE-REQUEST (kafka.controller.KafkaController)
[2022-06-07 21:27:52,100] INFO [Topic Deletion Manager 0] Handling deletion for topics STATION-UPDATE-REQUEST (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:52,100] INFO [Topic Deletion Manager 0] Deletion of topic STATION-UPDATE-REQUEST (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:52,127] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(STATION-UPDATE-REQUEST-0 -> NONE, STATION-UPDATE-REQUEST-2 -> NONE, STATION-UPDATE-REQUEST-1 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 21:27:52,127] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=STATION-UPDATE-REQUEST,Partition=0,Replica=0],[Topic=STATION-UPDATE-REQUEST,Partition=2,Replica=0],[Topic=STATION-UPDATE-REQUEST,Partition=1,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:52,127] INFO [Topic Deletion Manager 0] Handling deletion for topics STATION-UPDATE-REQUEST (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:52,163] INFO [Topic Deletion Manager 0] Deletion of topic STATION-UPDATE-REQUEST successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:52,164] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 21:27:52,165] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 21:27:53,537] DEBUG [Controller id=0] Delete topics listener fired for topics R-STATION-REGISTER-RESPONSE to be deleted (kafka.controller.KafkaController)
[2022-06-07 21:27:53,537] INFO [Controller id=0] Starting topic deletion for topics R-STATION-REGISTER-RESPONSE (kafka.controller.KafkaController)
[2022-06-07 21:27:53,537] INFO [Topic Deletion Manager 0] Handling deletion for topics R-STATION-REGISTER-RESPONSE (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:53,537] INFO [Topic Deletion Manager 0] Deletion of topic R-STATION-REGISTER-RESPONSE (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:53,603] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(R-STATION-REGISTER-RESPONSE-2 -> NONE, R-STATION-REGISTER-RESPONSE-1 -> NONE, R-STATION-REGISTER-RESPONSE-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 21:27:53,603] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=R-STATION-REGISTER-RESPONSE,Partition=2,Replica=0],[Topic=R-STATION-REGISTER-RESPONSE,Partition=1,Replica=0],[Topic=R-STATION-REGISTER-RESPONSE,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:53,604] INFO [Topic Deletion Manager 0] Handling deletion for topics R-STATION-REGISTER-RESPONSE (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:53,647] INFO [Topic Deletion Manager 0] Deletion of topic R-STATION-REGISTER-RESPONSE successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:53,648] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 21:27:53,654] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 21:27:55,317] DEBUG [Controller id=0] Delete topics listener fired for topics CLIENT-CHARGED to be deleted (kafka.controller.KafkaController)
[2022-06-07 21:27:55,318] INFO [Controller id=0] Starting topic deletion for topics CLIENT-CHARGED (kafka.controller.KafkaController)
[2022-06-07 21:27:55,318] INFO [Topic Deletion Manager 0] Handling deletion for topics CLIENT-CHARGED (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:55,318] INFO [Topic Deletion Manager 0] Deletion of topic CLIENT-CHARGED (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:55,376] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(CLIENT-CHARGED-0 -> NONE, CLIENT-CHARGED-2 -> NONE, CLIENT-CHARGED-1 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 21:27:55,376] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=CLIENT-CHARGED,Partition=0,Replica=0],[Topic=CLIENT-CHARGED,Partition=2,Replica=0],[Topic=CLIENT-CHARGED,Partition=1,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:55,377] INFO [Topic Deletion Manager 0] Handling deletion for topics CLIENT-CHARGED (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:55,417] INFO [Topic Deletion Manager 0] Deletion of topic CLIENT-CHARGED successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 21:27:55,419] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 21:27:55,420] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 21:27:58,653] INFO [Controller id=0] New topics: [Set(CLIENT-INFO)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(CLIENT-INFO,Some(s5oQsRM_RBelJEhRWfvJ3Q),Map(CLIENT-INFO-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), CLIENT-INFO-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), CLIENT-INFO-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 21:27:58,654] INFO [Controller id=0] New partition creation callback for CLIENT-INFO-2,CLIENT-INFO-1,CLIENT-INFO-0 (kafka.controller.KafkaController)
[2022-06-07 21:28:00,804] INFO [Controller id=0] New topics: [Set(CLIENT-REGISTER)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(CLIENT-REGISTER,Some(lZExW8NvS8e1XorXkZ0xWA),Map(CLIENT-REGISTER-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), CLIENT-REGISTER-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), CLIENT-REGISTER-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 21:28:00,804] INFO [Controller id=0] New partition creation callback for CLIENT-REGISTER-2,CLIENT-REGISTER-1,CLIENT-REGISTER-0 (kafka.controller.KafkaController)
[2022-06-07 21:28:02,263] INFO [Controller id=0] New topics: [Set(STATION-REGISTER)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(STATION-REGISTER,Some(0_nx1uKISQ6FFEYjYHa6bA),Map(STATION-REGISTER-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), STATION-REGISTER-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), STATION-REGISTER-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 21:28:02,263] INFO [Controller id=0] New partition creation callback for STATION-REGISTER-2,STATION-REGISTER-1,STATION-REGISTER-0 (kafka.controller.KafkaController)
[2022-06-07 21:28:03,508] INFO [Controller id=0] New topics: [Set(STATION-INFO)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(STATION-INFO,Some(SqszdXIqRk2vn-PZ3uZKkg),Map(STATION-INFO-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), STATION-INFO-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), STATION-INFO-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 21:28:03,508] INFO [Controller id=0] New partition creation callback for STATION-INFO-2,STATION-INFO-1,STATION-INFO-0 (kafka.controller.KafkaController)
[2022-06-07 21:28:04,732] INFO [Controller id=0] New topics: [Set(STATION-REGISTER-RESPONSE)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(STATION-REGISTER-RESPONSE,Some(5kZyY3RJQkSVECSwwrmk7g),Map(STATION-REGISTER-RESPONSE-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), STATION-REGISTER-RESPONSE-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), STATION-REGISTER-RESPONSE-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 21:28:04,732] INFO [Controller id=0] New partition creation callback for STATION-REGISTER-RESPONSE-2,STATION-REGISTER-RESPONSE-1,STATION-REGISTER-RESPONSE-0 (kafka.controller.KafkaController)
[2022-06-07 21:28:05,981] INFO [Controller id=0] New topics: [Set(STATION-UPDATE-REQUEST)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(STATION-UPDATE-REQUEST,Some(Mg6M3tJ4Q06bb7rpgGhFUQ),Map(STATION-UPDATE-REQUEST-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), STATION-UPDATE-REQUEST-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), STATION-UPDATE-REQUEST-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 21:28:05,981] INFO [Controller id=0] New partition creation callback for STATION-UPDATE-REQUEST-2,STATION-UPDATE-REQUEST-1,STATION-UPDATE-REQUEST-0 (kafka.controller.KafkaController)
[2022-06-07 21:28:07,227] INFO [Controller id=0] New topics: [Set(R-STATION-REGISTER-RESPONSE)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(R-STATION-REGISTER-RESPONSE,Some(CM4dh2BtTWaf-fPFkLF5iA),Map(R-STATION-REGISTER-RESPONSE-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), R-STATION-REGISTER-RESPONSE-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), R-STATION-REGISTER-RESPONSE-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 21:28:07,227] INFO [Controller id=0] New partition creation callback for R-STATION-REGISTER-RESPONSE-2,R-STATION-REGISTER-RESPONSE-1,R-STATION-REGISTER-RESPONSE-0 (kafka.controller.KafkaController)
[2022-06-07 21:28:08,511] INFO [Controller id=0] New topics: [Set(CLIENT-CHARGED)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(CLIENT-CHARGED,Some(Li75xaCbTsCtyM9EsuqSHw),Map(CLIENT-CHARGED-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), CLIENT-CHARGED-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), CLIENT-CHARGED-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 21:28:08,511] INFO [Controller id=0] New partition creation callback for CLIENT-CHARGED-2,CLIENT-CHARGED-1,CLIENT-CHARGED-0 (kafka.controller.KafkaController)
[2022-06-07 21:32:50,371] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-06-07 21:32:50,371] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-06-07 21:32:50,372] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-06-07 21:32:50,372] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-06-07 21:37:50,378] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-06-07 21:37:50,378] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-06-07 21:37:50,379] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-06-07 21:37:50,379] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-06-07 21:42:50,380] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-06-07 21:42:50,380] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-06-07 21:42:50,381] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-06-07 21:42:50,381] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-06-07 21:47:50,382] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-06-07 21:47:50,382] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-06-07 21:47:50,383] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-06-07 21:47:50,383] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-06-07 21:51:15,753] INFO [Controller id=0] New topics: [Set(R-CLIENT-CHARGING-0)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(R-CLIENT-CHARGING-0,Some(5j3Mpx_HRnyA-W0H6oXGYQ),Map(R-CLIENT-CHARGING-0-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 21:51:15,753] INFO [Controller id=0] New partition creation callback for R-CLIENT-CHARGING-0-0 (kafka.controller.KafkaController)
[2022-06-07 21:51:15,760] INFO [RequestSendThread controllerId=0] Controller 0 connected to gabriel:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-06-07 21:52:50,384] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-06-07 21:52:50,384] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-06-07 21:52:50,385] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-06-07 21:52:50,385] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-06-07 21:57:50,386] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-06-07 21:57:50,386] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-06-07 21:57:50,387] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-06-07 21:57:50,387] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
